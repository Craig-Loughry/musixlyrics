{"remainingRequest":"/Users/repo/musixlyrics/node_modules/babel-loader/lib/index.js!/Users/repo/musixlyrics/node_modules/ts-loader/index.js??ref--13-2!/Users/repo/musixlyrics/src/domain/song.ts","dependencies":[{"path":"/Users/repo/musixlyrics/src/domain/song.ts","mtime":1655128572000},{"path":"/Users/repo/musixlyrics/node_modules/cache-loader/dist/cjs.js","mtime":1656850731147},{"path":"/Users/repo/musixlyrics/node_modules/babel-loader/lib/index.js","mtime":1656850731447},{"path":"/Users/repo/musixlyrics/node_modules/ts-loader/index.js","mtime":1656850731468}],"contextDependencies":[],"result":["import _Array$isArray from \"/Users/repo/musixlyrics/node_modules/@babel/runtime-corejs2/core-js/array/is-array\";\nimport \"core-js/modules/es6.string.trim\";\nimport _classCallCheck from \"/Users/repo/musixlyrics/node_modules/@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/repo/musixlyrics/node_modules/@babel/runtime-corejs2/helpers/esm/createClass\";\nexport var Song =\n/*#__PURE__*/\nfunction () {\n  function Song(_id, _artistId, _name, _hasLyrics, _genres) {\n    _classCallCheck(this, Song);\n\n    this._id = _id;\n    this._artistId = _artistId;\n    this._name = _name;\n    this._hasLyrics = _hasLyrics;\n    this._genres = _genres;\n\n    if (!_id || _id.trim() === '') {\n      throw new Error('Invalid song id');\n    }\n\n    if (!_artistId || _artistId.trim() === '') {\n      throw new Error('Invalid song artist id');\n    }\n\n    if (!_name || _name.trim() === '') {\n      throw new Error('Invalid song name');\n    }\n\n    if (!_genres || !_Array$isArray(_genres)) {\n      throw new Error('Invalid song genres list');\n    }\n  }\n\n  _createClass(Song, [{\n    key: \"id\",\n    get: function get() {\n      return this._id;\n    }\n  }, {\n    key: \"artistId\",\n    get: function get() {\n      return this._artistId;\n    }\n  }, {\n    key: \"name\",\n    get: function get() {\n      return this._name;\n    }\n  }, {\n    key: \"hasLyrics\",\n    get: function get() {\n      return this._hasLyrics;\n    }\n  }, {\n    key: \"genres\",\n    get: function get() {\n      return this._genres;\n    }\n  }]);\n\n  return Song;\n}();",{"version":3,"sources":["/Users/repo/musixlyrics/src/domain/song.ts"],"names":[],"mappings":";;;;AAAA,WAAa,IAAb;AAAA;AAAA;AACE,gBACU,GADV,EAEU,SAFV,EAGU,KAHV,EAIU,UAJV,EAKU,OALV,EAK2B;AAAA;;AAJjB,SAAA,GAAA,GAAA,GAAA;AACA,SAAA,SAAA,GAAA,SAAA;AACA,SAAA,KAAA,GAAA,KAAA;AACA,SAAA,UAAA,GAAA,UAAA;AACA,SAAA,OAAA,GAAA,OAAA;;AAER,QAAI,CAAC,GAAD,IAAQ,GAAG,CAAC,IAAJ,OAAe,EAA3B,EAA+B;AAC7B,YAAM,IAAI,KAAJ,CAAU,iBAAV,CAAN;AACD;;AAED,QAAI,CAAC,SAAD,IAAc,SAAS,CAAC,IAAV,OAAqB,EAAvC,EAA2C;AACzC,YAAM,IAAI,KAAJ,CAAU,wBAAV,CAAN;AACD;;AAED,QAAI,CAAC,KAAD,IAAU,KAAK,CAAC,IAAN,OAAiB,EAA/B,EAAmC;AACjC,YAAM,IAAI,KAAJ,CAAU,mBAAV,CAAN;AACD;;AAED,QAAI,CAAC,OAAD,IAAY,CAAC,eAAc,OAAd,CAAjB,EAAyC;AACvC,YAAM,IAAI,KAAJ,CAAU,0BAAV,CAAN;AACD;AACF;;AAvBH;AAAA;AAAA,wBAyBQ;AACJ,aAAO,KAAK,GAAZ;AACD;AA3BH;AAAA;AAAA,wBA6Bc;AACV,aAAO,KAAK,SAAZ;AACD;AA/BH;AAAA;AAAA,wBAiCU;AACN,aAAO,KAAK,KAAZ;AACD;AAnCH;AAAA;AAAA,wBAqCe;AACX,aAAO,KAAK,UAAZ;AACD;AAvCH;AAAA;AAAA,wBAyCY;AACR,aAAO,KAAK,OAAZ;AACD;AA3CH;;AAAA;AAAA","sourcesContent":["export class Song {\n  constructor(\n    private _id: string,\n    private _artistId: string,\n    private _name: string,\n    private _hasLyrics: boolean,\n    private _genres: string[],\n  ) {\n    if (!_id || _id.trim() === '') {\n      throw new Error('Invalid song id');\n    }\n\n    if (!_artistId || _artistId.trim() === '') {\n      throw new Error('Invalid song artist id');\n    }\n\n    if (!_name || _name.trim() === '') {\n      throw new Error('Invalid song name');\n    }\n\n    if (!_genres || !Array.isArray(_genres)) {\n      throw new Error('Invalid song genres list');\n    }\n  }\n\n  get id(): string {\n    return this._id;\n  }\n\n  get artistId(): string {\n    return this._artistId;\n  }\n\n  get name(): string {\n    return this._name;\n  }\n\n  get hasLyrics(): boolean {\n    return this._hasLyrics;\n  }\n\n  get genres(): string[] {\n    return this._genres;\n  }\n}\n"],"sourceRoot":""}]}