{"remainingRequest":"/Users/repo/musixlyrics/node_modules/babel-loader/lib/index.js!/Users/repo/musixlyrics/node_modules/ts-loader/index.js??ref--13-2!/Users/repo/musixlyrics/src/services/musixmatch-api.ts","dependencies":[{"path":"/Users/repo/musixlyrics/src/services/musixmatch-api.ts","mtime":1655128572000},{"path":"/Users/repo/musixlyrics/node_modules/cache-loader/dist/cjs.js","mtime":1656850731147},{"path":"/Users/repo/musixlyrics/node_modules/babel-loader/lib/index.js","mtime":1656850731447},{"path":"/Users/repo/musixlyrics/node_modules/ts-loader/index.js","mtime":1656850731468}],"contextDependencies":[],"result":["import * as t from 'io-ts';\nexport var MusixMatchApiV1;\n\n(function (MusixMatchApiV1) {\n  MusixMatchApiV1[\"VERSION\"] = \"1.1\";\n  MusixMatchApiV1[\"ARTISTS\"] = \"artist.search\";\n  MusixMatchApiV1[\"SONGS\"] = \"track.search\";\n  MusixMatchApiV1[\"LYRICS\"] = \"track.lyrics.get\";\n})(MusixMatchApiV1 || (MusixMatchApiV1 = {}));\n\nexport var MusixMatchApiV1Params;\n\n(function (MusixMatchApiV1Params) {\n  MusixMatchApiV1Params[\"FORMAT\"] = \"format\";\n  MusixMatchApiV1Params[\"ARTIST\"] = \"q_artist\";\n  MusixMatchApiV1Params[\"TRACK\"] = \"q_track\";\n  MusixMatchApiV1Params[\"API_KEY\"] = \"apikey\";\n  MusixMatchApiV1Params[\"PAGE_SIZE\"] = \"page_size\";\n  MusixMatchApiV1Params[\"TRACK_ID\"] = \"track_id\";\n})(MusixMatchApiV1Params || (MusixMatchApiV1Params = {}));\n\nexport var MusixMatchApiV1Formats;\n\n(function (MusixMatchApiV1Formats) {\n  MusixMatchApiV1Formats[\"JSON\"] = \"json\";\n  MusixMatchApiV1Formats[\"JSONP\"] = \"jsonp\";\n})(MusixMatchApiV1Formats || (MusixMatchApiV1Formats = {}));\n\nexport var musixMatchApiV1MessageHeaderValidator = t.type({\n  status_code: t.number,\n  execute_time: t.number\n});\nexport var musixMatchApiV1ArtistValidator = t.type({\n  artist_id: t.number,\n  artist_name: t.string,\n  artist_comment: t.string,\n  artist_country: t.string,\n  artist_rating: t.number,\n  artist_twitter_url: t.union([t.string, t.null]),\n  restricted: t.number,\n  updated_time: t.string\n});\nexport var musixMatchApiV1ArtistListValidator = t.array(t.type({\n  artist: musixMatchApiV1ArtistValidator\n}));\nexport var musixMatchApiV1ArtistMessageValidator = t.type({\n  message: t.type({\n    header: musixMatchApiV1MessageHeaderValidator,\n    body: t.type({\n      artist_list: musixMatchApiV1ArtistListValidator\n    })\n  })\n});\nexport var musixMatchApiV1SongGenresValidator = t.type({\n  music_genre_list: t.array(t.type({\n    music_genre: t.type({\n      music_genre_id: t.number,\n      music_genre_parent_id: t.number,\n      music_genre_name: t.string,\n      music_genre_name_extended: t.string,\n      music_genre_vanity: t.string\n    })\n  }))\n});\nexport var musixMatchApiV1SongValidator = t.type({\n  track_id: t.number,\n  artist_id: t.number,\n  artist_name: t.string,\n  track_name: t.string,\n  track_rating: t.number,\n  commontrack_id: t.number,\n  instrumental: t.number,\n  explicit: t.number,\n  has_lyrics: t.number,\n  has_subtitles: t.number,\n  album_id: t.number,\n  album_name: t.string,\n  track_share_url: t.string,\n  restricted: t.number,\n  updated_time: t.string,\n  primary_genres: musixMatchApiV1SongGenresValidator\n});\nexport var musixMatchApiV1SongListValidator = t.array(t.type({\n  track: musixMatchApiV1SongValidator\n}));\nexport var musixMatchApiV1SongMessageValidator = t.type({\n  message: t.type({\n    header: musixMatchApiV1MessageHeaderValidator,\n    body: t.type({\n      track_list: musixMatchApiV1SongListValidator\n    })\n  })\n});\nexport var musixMatchApiV1SongLyricsValidator = t.type({\n  lyrics_id: t.number,\n  explicit: t.number,\n  lyrics_body: t.string,\n  script_tracking_url: t.string,\n  pixel_tracking_url: t.string,\n  lyrics_copyright: t.string,\n  updated_time: t.string\n});\nexport var musixMatchApiV1SongLyricsMessageValidator = t.type({\n  message: t.type({\n    header: musixMatchApiV1MessageHeaderValidator,\n    body: t.type({\n      lyrics: musixMatchApiV1SongLyricsValidator\n    })\n  })\n});",{"version":3,"sources":["/Users/repo/musixlyrics/src/services/musixmatch-api.ts"],"names":[],"mappings":"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","sourcesContent":["import * as t from 'io-ts';\n\nexport enum MusixMatchApiV1 {\n  VERSION = '1.1',\n  ARTISTS = 'artist.search',\n  SONGS = 'track.search',\n  LYRICS = 'track.lyrics.get',\n}\n\nexport const enum MusixMatchApiV1Params {\n  FORMAT = 'format',\n  ARTIST = 'q_artist',\n  TRACK = 'q_track',\n  API_KEY = 'apikey',\n  PAGE_SIZE = 'page_size',\n  TRACK_ID = 'track_id',\n}\n\nexport const enum MusixMatchApiV1Formats {\n  JSON = 'json',\n  JSONP = 'jsonp',\n}\n\nexport const musixMatchApiV1MessageHeaderValidator = t.type({\n  status_code: t.number,\n  execute_time: t.number,\n});\n\nexport const musixMatchApiV1ArtistValidator = t.type({\n  artist_id: t.number,\n  artist_name: t.string,\n  artist_comment: t.string,\n  artist_country: t.string,\n  artist_rating: t.number,\n  artist_twitter_url: t.union([t.string, t.null]),\n  restricted: t.number,\n  updated_time: t.string,\n});\n\nexport const musixMatchApiV1ArtistListValidator = t.array(t.type({artist: musixMatchApiV1ArtistValidator}));\n\nexport const musixMatchApiV1ArtistMessageValidator = t.type({\n  message: t.type({\n    header: musixMatchApiV1MessageHeaderValidator,\n    body: t.type({\n      artist_list: musixMatchApiV1ArtistListValidator,\n    }),\n  }),\n});\n\nexport const musixMatchApiV1SongGenresValidator = t.type({\n  music_genre_list: t.array(t.type({\n    music_genre: t.type({\n    music_genre_id: t.number,\n    music_genre_parent_id: t.number,\n      music_genre_name: t.string,\n      music_genre_name_extended: t.string,\n      music_genre_vanity: t.string,\n  }),\n  })),\n});\n\nexport const musixMatchApiV1SongValidator = t.type({\n  track_id: t.number,\n  artist_id: t.number,\n  artist_name: t.string,\n  track_name: t.string,\n  track_rating: t.number,\n  commontrack_id: t.number,\n  instrumental: t.number,\n  explicit: t.number,\n  has_lyrics: t.number,\n  has_subtitles: t.number,\n  album_id: t.number,\n  album_name: t.string,\n  track_share_url: t.string,\n  restricted: t.number,\n  updated_time: t.string,\n  primary_genres: musixMatchApiV1SongGenresValidator,\n});\n\nexport const musixMatchApiV1SongListValidator = t.array(t.type({track: musixMatchApiV1SongValidator}));\n\nexport const musixMatchApiV1SongMessageValidator = t.type({\n  message: t.type({\n    header: musixMatchApiV1MessageHeaderValidator,\n    body: t.type({\n      track_list: musixMatchApiV1SongListValidator,\n    }),\n  }),\n});\n\nexport const musixMatchApiV1SongLyricsValidator = t.type({\n  lyrics_id: t.number,\n  explicit: t.number,\n  lyrics_body: t.string,\n  script_tracking_url: t.string,\n  pixel_tracking_url: t.string,\n  lyrics_copyright: t.string,\n  updated_time: t.string,\n});\n\nexport const musixMatchApiV1SongLyricsMessageValidator = t.type({\n  message: t.type({\n    header: musixMatchApiV1MessageHeaderValidator,\n    body: t.type({\n      lyrics: musixMatchApiV1SongLyricsValidator,\n    }),\n  }),\n});\n\n// extract the corresponding static types\nexport interface MusixMatchApiV1ArtistMessage extends t.TypeOf<typeof musixMatchApiV1ArtistMessageValidator> {}\nexport interface MusixMatchApiV1ArtistList extends t.TypeOf<typeof musixMatchApiV1ArtistListValidator> {}\n\nexport interface MusixMatchApiV1SongMessage extends t.TypeOf<typeof musixMatchApiV1SongMessageValidator> {}\nexport interface MusixMatchApiV1SongList extends t.TypeOf<typeof musixMatchApiV1SongListValidator> {}\n\nexport interface MusixMatchApiV1SongLyricsMessage extends t.TypeOf<typeof musixMatchApiV1SongLyricsMessageValidator> {}\nexport interface MusixMatchApiV1SongLyrics extends t.TypeOf<typeof musixMatchApiV1SongLyricsValidator> {}\n"],"sourceRoot":""}]}