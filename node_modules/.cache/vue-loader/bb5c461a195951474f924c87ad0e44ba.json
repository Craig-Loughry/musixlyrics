{"remainingRequest":"/Users/repo/musixlyrics/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/repo/musixlyrics/src/components/Search.vue?vue&type=script&lang=ts&","dependencies":[{"path":"/Users/repo/musixlyrics/src/components/Search.vue","mtime":1655128572000},{"path":"/Users/repo/musixlyrics/node_modules/cache-loader/dist/cjs.js","mtime":1656850731147},{"path":"/Users/repo/musixlyrics/node_modules/babel-loader/lib/index.js","mtime":1656850731447},{"path":"/Users/repo/musixlyrics/node_modules/ts-loader/index.js","mtime":1656850731468},{"path":"/Users/repo/musixlyrics/node_modules/cache-loader/dist/cjs.js","mtime":1656850731147},{"path":"/Users/repo/musixlyrics/node_modules/vue-loader/lib/index.js","mtime":1656850731933}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\nimport {Component, Emit, Vue} from 'vue-property-decorator';\n\n@Component({})\nexport default class Search extends Vue {\n  private searchText = '';\n\n  public searchHandler(): void {\n    if ('' !== this.searchText) {\n      this.emitSearchEvent();\n    } else {\n      this.emitSearchClearedEvent();\n    }\n  }\n\n  @Emit('search-triggered')\n  public emitSearchEvent(): string {\n    console.log('Emitting search triggered event');\n    return this.searchText;\n  }\n\n  @Emit('search-cleared')\n  public emitSearchClearedEvent(): void {\n    return;\n  }\n}\n",{"version":3,"sources":["Search.vue"],"names":[],"mappings":";;;;;;;;;;AAUA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA","file":"Search.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <el-container class=\"lf-search\">\n    <el-input v-model=\"searchText\" @keyup.enter.native=\"searchHandler()\" clearable\n              placeholder=\"Artist or song to search for\" prefix-icon=\"el-icon-search\">\n      <el-button slot=\"append\" type=\"primary\" icon=\"el-icon-search\" @click=\"searchHandler()\">Search</el-button>\n    </el-input>\n  </el-container>\n</template>\n\n<script lang=\"ts\">\n  import {Component, Emit, Vue} from 'vue-property-decorator';\n\n  @Component({})\n  export default class Search extends Vue {\n    private searchText = '';\n\n    public searchHandler(): void {\n      if ('' !== this.searchText) {\n        this.emitSearchEvent();\n      } else {\n        this.emitSearchClearedEvent();\n      }\n    }\n\n    @Emit('search-triggered')\n    public emitSearchEvent(): string {\n      console.log('Emitting search triggered event');\n      return this.searchText;\n    }\n\n    @Emit('search-cleared')\n    public emitSearchClearedEvent(): void {\n      return;\n    }\n  }\n</script>\n\n<style scoped>\n  .lf-search {\n    width: 100%;\n  }\n</style>\n"]}]}