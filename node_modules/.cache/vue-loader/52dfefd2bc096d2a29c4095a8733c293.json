{"remainingRequest":"/Users/repo/musixlyrics/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/repo/musixlyrics/src/views/Home.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"/Users/repo/musixlyrics/src/views/Home.vue","mtime":1655128572000},{"path":"/Users/repo/musixlyrics/node_modules/css-loader/index.js","mtime":1656850730178},{"path":"/Users/repo/musixlyrics/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1656850732191},{"path":"/Users/repo/musixlyrics/node_modules/postcss-loader/src/index.js","mtime":1656850731345},{"path":"/Users/repo/musixlyrics/node_modules/cache-loader/dist/cjs.js","mtime":1656850731147},{"path":"/Users/repo/musixlyrics/node_modules/vue-loader/lib/index.js","mtime":1656850731933}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n.lf-artists > h3 {\n  color: var(--font-color);\n}\n\n.lf-artists ul {\n  text-align: initial;\n}\n\n.lf-home-view-results {\n  color: var(--font-color);\n}\n",{"version":3,"sources":["Home.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgIA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA","file":"Home.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <el-container class=\"lf-home-view\" direction=\"vertical\">\n    <Search @search-triggered=\"search($event)\" @search-cleared=\"searchCleared()\"></Search>\n    <el-divider></el-divider>\n    <el-row class=\"lf-home-view-results\">\n      <el-col :span=\"12\">\n        <el-container class=\"lf-artists\" direction=\"vertical\">\n          <h3>Artists</h3>\n          <el-container v-loading=\"artistsLoading\">\n            <ul>\n              <li v-for=\"artist in artists\" :key=\"artist.id\">{{artist.name}}</li>\n            </ul>\n          </el-container>\n        </el-container>\n      </el-col>\n      <el-col :span=\"12\">\n        <SongsList :songs=\"songs\" :songsLoading=\"songsLoading\" @song-selected=\"songSelected($event)\"></SongsList>\n      </el-col>\n    </el-row>\n  </el-container>\n</template>\n\n<script lang=\"ts\">\nimport {Component, Vue} from 'vue-property-decorator';\nimport Search from '@/components/Search.vue';\nimport {MusicService} from '@/services';\nimport {TYPES} from '@/ioc/types';\nimport {lazyInject} from '@/ioc/config';\nimport {Artist, Song} from '@/domain';\nimport SongsList from '@/components/SongsList.vue';\nimport {ROUTES} from '@/router/router';\n\n@Component({\n  components: {\n    SongsList,\n    Search,\n  },\n})\nexport default class Home extends Vue {\n  @lazyInject(TYPES.MUSIC_SERVICE)\n  private musicService!: MusicService;\n\n  private artists: Artist[] = [];\n  private artistsLoading = false;\n\n  private songs: Song[] = [];\n  private songsLoading = false;\n\n  public mounted() {\n    console.log('Home component mounted');\n    console.log('Music service instance: ', this.musicService);\n  }\n\n  public search(searchText: string): void {\n    console.log('Handling search: ', searchText);\n\n    this.artistsLoading = true;\n    const artistsSearchSubscription = this.musicService.findArtists(searchText).subscribe({\n      next: (artists: Artist[]) => {\n        console.log(`Artists search result received. Found ${artists.length} artists`);\n        this.artists = artists;\n        this.artistsLoading = false;\n      },\n      error: (err: any) => {\n        console.error('Error: ', err);\n        this.artistsLoading = false;\n        artistsSearchSubscription.unsubscribe();\n\n      },\n      complete: () => {\n        this.artistsLoading = false;\n        artistsSearchSubscription.unsubscribe();\n      },\n    });\n\n    this.songsLoading = true;\n    const songsSearchSubscription = this.musicService.findSongs(searchText).subscribe({\n      next: (songs: Song[]) => {\n        console.log(`Songs search result received. Found ${songs.length} artists`);\n        this.songs = songs;\n        this.songsLoading = false;\n      },\n      error: (err: any) => {\n        console.error('Error: ', err);\n        this.songsLoading = false;\n        songsSearchSubscription.unsubscribe();\n\n      },\n      complete: () => {\n        this.songsLoading = false;\n        songsSearchSubscription.unsubscribe();\n      },\n    });\n  }\n\n  public searchCleared(): void {\n    console.log('Handling search cleared');\n  }\n\n  public songSelected(selectedSong: Song): void {\n    console.log(`Song selected: [${selectedSong.name}]. Loading its lyrics`);\n\n    const lyricsSearchSubscription = this.musicService.findLyrics(selectedSong).subscribe({\n      next: (lyrics) => {\n        console.log(`Lyrics loaded for [${selectedSong.name}]: ${lyrics.lyrics}`);\n\n        console.log('Redirecting to the lyrics view');\n        this.$router.push({\n          name: ROUTES.LYRICS,\n          params: {\n            song: selectedSong,\n            songLyrics: lyrics,\n          },\n        } as any); // oops opportunity to improve\n      },\n      error: (err: any) => {\n        console.error('Error: ', err);\n        lyricsSearchSubscription.unsubscribe();\n      },\n      complete: () => {\n        lyricsSearchSubscription.unsubscribe();\n      },\n    });\n  }\n}\n</script>\n\n<style>\n  .lf-artists > h3 {\n    color: var(--font-color);\n  }\n\n  .lf-artists ul {\n    text-align: initial;\n  }\n\n  .lf-home-view-results {\n    color: var(--font-color);\n  }\n</style>\n"]}]}